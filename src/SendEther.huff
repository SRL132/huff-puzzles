 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


//gas: amount of gas to send to the sub context to execute. The gas that is not used by the sub context is returned to this //one.
//address: the account which context to execute.
//value: value in wei to send to the account.
//argsOffset: byte offset in the memory in bytes, the calldata of the sub context.
//argsSize: byte size to copy (size of the calldata).
//retOffset: byte offset in the memory in bytes, where to store the return data of the sub context.
//retSize: byte size to copy (size of the return data).
 #define macro SEND_ETHER() = takes(0) returns(0) {
    0x00
    0x00
    0x00
    0x00
    callvalue
    0x04 calldataload
    0x20
    call
} 

 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr
    __FUNC_SIG(sendEther) eq sendEther jumpi

    0x00 0x00 revert

    sendEther:
        SEND_ETHER()
 }